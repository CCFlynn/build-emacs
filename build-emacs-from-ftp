#!/bin/sh
set -e
set -x

cd `dirname $0`

FTP_DIR_URL=${1:?"1st arg should be an ftp url"}
LABEL=$([ x$2 = x ] || echo "$2-")

eval `curl -s "$FTP_DIR_URL/" | perl -MSort::Versions -ne 'push @v, { s=>$1, d=>$2, p=>$3, v=>$4 } if /(\d+) (\w+ \d+ (?: \d+|\d+:\d+)) (emacs-([\d.]+).tar.gz)/; END { %r = %{${[sort { versioncmp $b->{v}, $a->{v} } @v]}[0]}; print "SIZE=$r{s}\nLATEST=$r{p}\nVERSION=$r{v}\nDATE=\"$r{d}\"\n" }'`

# Prevent clean() from removing the whole directory when the above regular expression fails. Grrrrr.
if [ x$LATEST = x ]; then
	echo "Error retrieving latest version number from $FTP_DIR_URL." 1>&2
	exit
fi

mkdir -p ftp-versions

if [ \! -f ftp-versions/$LATEST ]; then
	(cd ftp-versions && curl -s -O "$FTP_DIR_URL/$LATEST")
else
	if [ `stat -f "%z" ftp-versions/$LATEST` != $SIZE ]; then
		(cd ftp-versions && curl -C - -s -O "$FTP_DIR_URL/$LATEST")
	fi
fi

if [ -f emacs-builds/Emacs-${LABEL}$VERSION-`uname -p`-`sw_vers -productVersion`.dmg ]; then
	# Already built? Done.
	exit;
fi

(cd ftp-versions && tar xzf $LATEST)

DIR=`echo ftp-versions/$LATEST | sed -e 's/.tar.gz$//'`

function clean () {
	rm -rf $DIR
}
trap clean INT EXIT

# Correct stupid bugs in the first pretest release:
test -f $DIR/mac/make-package || cp -p emacs-cvs-clean/mac/make-package $DIR/mac
test -f $DIR/mac/Emacs.app/Contents/Resources/Emacs.icns || cp -p emacs-cvs-clean/mac/Emacs.app/Contents/Resources/Emacs.icns $DIR/mac/Emacs.app/Contents/Resources/

(cd $DIR/mac && ./make-package --self-contained)

mv $DIR/mac/EmacsInstaller.dmg emacs-builds/Emacs-${LABEL}$VERSION-`uname -p`-`sw_vers -productVersion`.dmg

# We can cross compile powerpc code if we are on an intel. Don't know about the reverse!
if [ `uname -p`x == i386x ]; then
	(cd $DIR/mac && env CC=powerpc-apple-darwin8-gcc-4.0.1 ./make-package -C,--host=powerpc-apple-darwin --self-contained -C,--build=i386-apple-darwin)
	mv $DIR/mac/EmacsInstaller.dmg emacs-builds/Emacs-${LABEL}$VERSION-powerpc-`sw_vers -productVersion`.dmg
fi

trap "" INT EXIT

clean

TOUCHDATE=`perl -MPOSIX -MDate::Parse -e 'print strftime "%Y%m%d%H%M.%S", localtime str2time '"'$DATE';"`

touch -t "$TOUCHDATE" emacs-builds/Emacs-${LABEL}$VERSION-*
